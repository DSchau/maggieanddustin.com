executors:
  node:
    parameters:
      image:
        type: string
        default: "10"
    docker:
      - image: circleci/node:<< parameters.image >>

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - yarn-cache-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install node modules
      command: yarn --frozen-lockfile

  persist_cache: &persist_cache
    save_cache:
      name: Save node modules cache
      key: yarn-cache-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache

commands:
  tf:
    parameters:
      command:
        type: string
        default: "plan"
      working_directory:
        type: string
        default: ~/project/terraform
    steps:
      - checkout
      - run: echo 'export PATH=/tmp/tf:$PATH' >> $BASH_ENV
      - run:
          name: Provide Terraform Variables
          command: |
            echo "client_email=\"${CLIENT_EMAIL}\"" >> terraform.tfvars
            echo "private_key=\"${PRIVATE_KEY}\"" >> terraform.tfvars
            cat terraform.tfvars
          working_directory: "<< parameters.working_directory >>"
      - run:
          name: Install Terraform
          command: |
            mkdir -p /tmp/tf/
            wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip
            unzip terraform_0.11.13_linux_amd64.zip -d /tmp/tf
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *persist_cache
      - attach_workspace:
          at: terraform
      - run:
          name: Build Lambda
          command: yarn build
          working_directory: ~/project/infra
      - run:
          name: Terraform Init
          command: terraform init
          working_directory: "<< parameters.working_directory >>"
      - run:
          name: Terraform Plan
          command: terraform << parameters.command >> -out tfplan.tf
          working_directory: "<< parameters.working_directory >>"
      - persist_to_workspace:
          root: terraform
          paths:
            - .terraform
            - terraform.tfplan
            - tfplan.tf

version: 2.1
jobs:
  build:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *persist_cache
      - run: yarn build
  plan:
    executor: node
    steps:
      - tf:
          command: plan

  apply:
    executor: node
    steps:
      - tf:
          command: apply

workflows:
  version: 2
  deploy:
    jobs:
      - build
      - plan
      - apply:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only:
                - master
